---
title: "Homework Assignment #2" 
subtitle: "Part II"
author: "Linus Ghanadan"
date: 2024-02-03
toc: true
format: html
editor_options: 
  chunk_output_type: console
---

```{r, include = FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                load packages                             ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

library(tidyverse)
library(janitor)
library(here)
library(countrycode)
```

```{r, include = FALSE}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                import data                               ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# read in data
methane_df <- readr::read_csv(here("data", "Non-CO2 Greenhouse Gas Data Tool  US EPAZoom inZoom out2000Copyright (c) 2015 Highsoft AS, Based on data from Natural EarthChart context menu.csv")) %>% 
  clean_names() # convert column names to lower_case_snake format
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                          data cleaning & wrangling                       ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# add continent column using countrycode package
methane_df$continent <- countrycode(methane_df$country, "country.name", "continent")
methane_df$continent[which(methane_df$country == "Kosovo")] <- "Europe" # manually assign country "Kosovo" to continent "Europe"

# create long format data frame for sectors
sector_df_long <- methane_df %>% 
  pivot_longer(cols = c("agriculture", "energy", "industrial_processes", "waste"), # remove sector columns
               names_to = "sector", # new column sector containing names from original sector columns
               values_to = "sector_emissions") %>% # new column sector_emissions containing values from original sector sectors columns
  select("continent", "country", "total_emissions", "sector", "sector_emissions")

# create long format data frame for agriculture sources
ag_df_long <- methane_df %>%
  pivot_longer(cols = c("livestock", "rice_cultivation", "soil_cropland", "other_ag_ch4_and_n2o"), # remove ag source columns
               names_to = "source", # new column source containing names from original ag source columns
               values_to = "source_emissions") %>% # new column source_emissions containing values from original ag source columns
  select("continent", "country", "agriculture", "source", "source_emissions")

```


```{r}
# exploratory visualization 1
sector_df_long %>%
  filter(!is.na(continent)) %>% 
  ggplot(aes(x = sector_emissions, y = reorder(continent, -sector_emissions), fill = sector)) +
  geom_bar(stat = "identity") +
  theme_minimal()
```

```{r}
# exploratory visualization 2
sector_df_long %>%
  filter(!is.na(continent)) %>% 
  top_n(10) %>% 
  ggplot(aes(y = reorder(country, -total_emissions),
             x = sector_emissions,
             fill = sector)) +
  geom_bar(stat = "identity") +
  theme_minimal()
```


```{r}
# exploratory visualization 3
ag_df_long %>%
  filter(!is.na(continent)) %>% 
  top_n(10) %>%  
  ggplot(aes(y = reorder(country, -agriculture),
             x = source_emissions,
             fill = source)) +
  geom_bar(stat = "identity") +
  theme_minimal()
```

1. What have you learned about your data? Have any potentially interesting patterns emerged? (5-8 sentences)

I've learned a good deal about global methane emissions through my exploratory visualizations. From my first graph, 

----

2. In HW #1, you outlined some questions that you wanted to answer using these data. Have you made any strides towards answering those questions? If yes, how so? If no, what next steps do you need to take (e.g. I need to create X plot type, I still need to track down Y data, I need to restructure existing data so that you can visualize it in Z ways, etc.)?


2
Want to create percent column so can visualize in terms of percent of global emissions


3
having to make new dataframes for every single visualization
deciding what question to address based on how much information i can show in a graph
